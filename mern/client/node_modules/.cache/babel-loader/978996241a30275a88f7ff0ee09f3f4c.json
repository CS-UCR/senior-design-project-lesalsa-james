{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sabrina\\\\Documents\\\\School\\\\CS178AB\\\\senior-design-project-lesalsa-james\\\\mern\\\\client\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport './Home.css';\nimport React, { useState } from 'react';\nimport gamersLogo from './images/GamersLogo.png'; // import {\n//     BrowserRouter as Router,\n//     Routes,\n//     Route,\n//     Link\n//   } from \"react-router-dom\";\n\nimport { useNavigate } from 'react-router-dom'; // This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n// export default function BasicExample() {\n//   return (\n//     <Router>\n//       <div>\n//         <ul>\n//           <button>\n//             <Link to=\"/\">Home</Link>\n//           </button>\n//           <li>\n//             <Link to=\"/Sign_In\">Sign In</Link>\n//           </li>\n//           <li>\n//             <Link to=\"/Register\">Register</Link>\n//           </li>\n//         </ul>\n//         <hr />\n//         {/*\n//           A <Switch> looks through all its children <Route>\n//           elements and renders the first one whose path\n//           matches the current URL. Use a <Switch> any time\n//           you have multiple routes, but you want only one\n//           of them to render at a time\n//         */}\n//         <Routes>\n//           <Route exact path=\"/\" element = {<Home />} />\n//           {/* <Route path=\"/Next\">\n//             <Next />\n//           </Route> */}\n//           <Route exact path=\"/\" element = {<Register />} />\n//         </Routes>\n//       </div>\n//     </Router>\n//   );\n// }\n// You can think of these components as \"pages\"\n// in your app.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [values, setValues] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [valid, setValid] = useState(false);\n\n  const handleUserNameChange = event => {\n    setValues({ ...values,\n      userName: event.target.value\n    });\n  };\n\n  const handlePasswordChange = event => {\n    setValues({ ...values,\n      password: event.target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (values.userName && values.password) {\n      setValid(true);\n    }\n\n    setSubmitted(true);\n  };\n\n  let navigate = useNavigate();\n\n  function handleClick() {\n    navigate('/');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"Home-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"picture\",\n        src: gamersLogo,\n        alt: \"GamersOnly Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"button1\",\n        onClick: handleClick,\n        children: \" Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button2\",\n        children: \" Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"register-form\",\n          onSubmit: handleSubmit,\n          children: [submitted && valid ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: \"Success! Thank you for signing in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleUserNameChange,\n            value: values.userName,\n            id: \"user-name\",\n            className: \"form-field\",\n            type: \"text\",\n            placeholder: \"Username\",\n            name: \"userName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), submitted && !values.userName ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Please enter a username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 44\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handlePasswordChange,\n            value: values.password,\n            id: \"user-password\",\n            className: \"form-field\",\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), submitted && !values.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Please enter a password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 44\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form-field\",\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find some Gamers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n} //   function Next() {\n//     return (\n//       <div>\n//         <h2>Sign In</h2>\n//       </div>\n//     );\n//   }\n// function Register() {\n//   return (\n//     <div>\n//       <h2>Register</h2>\n//     </div>\n//   );\n// }\n\n\n_s(Home, \"hLhN2j82blZuZsfcXC7ENjAH0D8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Sabrina/Documents/School/CS178AB/senior-design-project-lesalsa-james/mern/client/src/Home.js"],"names":["React","useState","gamersLogo","useNavigate","Home","values","setValues","userName","password","submitted","setSubmitted","valid","setValid","handleUserNameChange","event","target","value","handlePasswordChange","handleSubmit","preventDefault","navigate","handleClick"],"mappings":"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","sourcesContent":["import './Home.css';\r\nimport React, { useState } from 'react';\r\nimport gamersLogo from './images/GamersLogo.png';\r\n// import {\r\n//     BrowserRouter as Router,\r\n//     Routes,\r\n//     Route,\r\n//     Link\r\n//   } from \"react-router-dom\";\r\nimport { useNavigate } from 'react-router-dom';\r\n  // This site has 3 pages, all of which are rendered\r\n  // dynamically in the browser (not server rendered).\r\n  //\r\n  // Although the page does not ever refresh, notice how\r\n  // React Router keeps the URL up to date as you navigate\r\n  // through the site. This preserves the browser history,\r\n  // making sure things like the back button and bookmarks\r\n  // work properly.\r\n  \r\n  // export default function BasicExample() {\r\n  //   return (\r\n  //     <Router>\r\n  //       <div>\r\n  //         <ul>\r\n  //           <button>\r\n  //             <Link to=\"/\">Home</Link>\r\n  //           </button>\r\n  //           <li>\r\n  //             <Link to=\"/Sign_In\">Sign In</Link>\r\n  //           </li>\r\n  //           <li>\r\n  //             <Link to=\"/Register\">Register</Link>\r\n  //           </li>\r\n  //         </ul>\r\n  \r\n  //         <hr />\r\n  \r\n  //         {/*\r\n  //           A <Switch> looks through all its children <Route>\r\n  //           elements and renders the first one whose path\r\n  //           matches the current URL. Use a <Switch> any time\r\n  //           you have multiple routes, but you want only one\r\n  //           of them to render at a time\r\n  //         */}\r\n  //         <Routes>\r\n  //           <Route exact path=\"/\" element = {<Home />} />\r\n            \r\n  //           {/* <Route path=\"/Next\">\r\n  //             <Next />\r\n  //           </Route> */}\r\n  //           <Route exact path=\"/\" element = {<Register />} />\r\n  //         </Routes>\r\n  //       </div>\r\n  //     </Router>\r\n  //   );\r\n  // }\r\n  \r\n  // You can think of these components as \"pages\"\r\n  // in your app.\r\n\r\n\r\n  \r\n  function Home() {\r\n  \r\n    const [values, setValues] = useState({\r\n        userName: \"\",\r\n        password: \"\",\r\n      });\r\n  \r\n      const [submitted, setSubmitted ] = useState(false);\r\n      const [valid, setValid] = useState(false);\r\n  \r\n      const handleUserNameChange = (event) => {\r\n        setValues({...values, userName: event.target.value})\r\n      }\r\n  \r\n      const handlePasswordChange = (event) => {\r\n        setValues({...values, password: event.target.value})\r\n      }\r\n      \r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(values.userName && values.password) {\r\n          setValid(true);\r\n        }\r\n        setSubmitted(true);\r\n      }\r\n      let navigate = useNavigate();\r\n      function handleClick () {\r\n        navigate('/')\r\n      }\r\n    return (\r\n        <div className=\"Home\">\r\n        <header className=\"Home-header\">\r\n        <img className=\"picture\" src={gamersLogo} alt=\"GamersOnly Logo\"/>  \r\n\r\n        <button id=\"button1\" onClick = {handleClick}> Login</button>\r\n        <button className=\"button2\"> Sign up</button>\r\n\r\n      <div className=\"form-container\">\r\n        <form className=\"register-form\" onSubmit={handleSubmit}>\r\n          {submitted && valid ? <div className=\"success-message\">Success! Thank you for signing in!</div>: null}\r\n          <input\r\n            onChange={handleUserNameChange}\r\n            value={values.userName}\r\n            id=\"user-name\"\r\n            className=\"form-field\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"userName\"\r\n          />\r\n          {submitted && !values.userName ? <span>Please enter a username</span>: null}\r\n  \r\n          <input\r\n            onChange={handlePasswordChange}\r\n            value={values.password}\r\n            id=\"user-password\"\r\n            className=\"form-field\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n          />\r\n          {submitted && !values.password ? <span>Please enter a password</span>: null}\r\n  \r\n          <button className=\"form-field\" type=\"submit\">Sign In</button>\r\n          {/* <button className=\"form-field\" onClick= {registerHandler}>Register</button> */}\r\n        </form>\r\n      </div>\r\n  \r\n          <p>\r\n            Find some Gamers\r\n          </p>\r\n        </header>\r\n  \r\n      </div>\r\n    );\r\n  }\r\n  \r\n//   function Next() {\r\n//     return (\r\n//       <div>\r\n//         <h2>Sign In</h2>\r\n//       </div>\r\n//     );\r\n//   }\r\n  \r\n  // function Register() {\r\n  //   return (\r\n  //     <div>\r\n  //       <h2>Register</h2>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n  export default Home;"]},"metadata":{},"sourceType":"module"}